basic {
  data_dir = /local/scratch/stu9/RLS/relation/extraction/  # Edit this
  dataset_dir = ${basic.data_dir}/dataset
  log_root = ${basic.data_dir}
  # use_amp = true
  use_amp = false

  model_init_config = false
  model_init_suffix = false
}

data_med = ${basic} {
  dataset_name = med_curated
  with_root = false
  train_partition = train
  dev_partition = dev
  test_partition = test

  num_re_labels = 3
  max_re_labels = 1

  allow_nested_mentions = false
  allow_singletons = true
  max_top_antecedents = 40
  max_span_width = 20

  num_epochs = 100
  report_frequency = 200
  eval_frequency = 1000
  start_eval_after_ratio = 0
  do_eval = false
}

data_med_adhd = ${data_med} {
  dataset_name = med_adhd_all
}

segment_encoder {
  max_seq_len = 512
  overlapping = 0
  max_training_seg = 4
  is_gen = false
}

bert_base = ${segment_encoder} {
  model_type = bert
  pretrained = bert-base-cased
  tokenizer = bert-base-cased
}

bert_large = ${bert_base} {
  pretrained = bert-large-cased
}

bert_large_med = ${bert_base} {
  pretrained = ${basic.data_dir}/pretrained/bert_large_med
  tokenizer = ${basic.data_dir}/pretrained/bert-large-cased-tokenizer

}

roberta_base = ${segment_encoder} {
  model_type = roberta
  pretrained = roberta-base
  tokenizer = roberta-base
}

roberta_large_med = ${roberta_base} {
  pretrained = ${basic.data_dir}/pretrained/roberta_large_med
  tokenizer = ${basic.data_dir}/pretrained/roberta-large-tokenizer
}

roberta_large = ${roberta_base} {
  pretrained = roberta-large
}

spanbert_base = ${segment_encoder} {
  model_type = span
  pretrained = SpanBERT/spanbert-base-cased
  tokenizer = bert-base-cased
}

spanbert_large = ${spanbert_base} {
  pretrained = SpanBERT/spanbert-large-cased
}

spanbert_large_med = ${spanbert_base} {
  pretrained = ${basic.data_dir}/pretrained/spanbert_large_med
  tokenizer = ${basic.data_dir}/pretrained/spanbert-large-cased-tokenizer
}


coref {
  batch_size = 4
  eval_batch_size = 4
  gradient_accumulation_steps = 1
  warmup_ratio = 0.01
  bert_learning_rate = 5e-5
  task_learning_rate = 2e-4
  bert_wd = 1e-2
  task_wd = 0
  adam_eps = 1e-8
  max_grad_norm = 1

  dropout_rate = 0.3
  span_w_boundary = true
  span_w_tokens = true
  mention_heads = true
  approx_pruning = false
  use_span_type = false
  use_span_width = true
  use_width_prior = true
  use_antecedent_distance = true
  use_antecedent_distance_prior = true
  use_speaker_indicator = false
  pair_span_transform = false
  pair_span_hidden_size = 768
  coarse_to_fine = true
  fine_grained = true
  pair_with_similarity = true
  top_span_ratio = 0.4
  max_num_extracted_spans = 512
  mention_loss_coef = 0.1
}

coref_large_ner = ${coref} {
  use_span_type = true
}

coref_ner = ${coref} {
  use_span_type = true
  use_amp = true
}

med_joint {
  re_transform_mention = true
  re_distinguish_ht = true
  re_mention_hidden_size = 512
  re_add_prior = true

  re_fast_bilinear = true
  re_num_blocks = 12

  re_dygie = false

  re_propagation = false
  re_propagation_void_negative = true
  re_propagation_transform = true
  re_propagation_rel_emb = false
  re_propagation_do_softmax = true
  re_propagation_same_bilinear = false
  re_propagation_rel_attention = true
  re_propagation_update_scores = true
  re_propagation_only_last = false

  top_span_ratio = 0.3
  mention_loss_coef = 1
}

train_medjoint_med_spanbert_base = ${data_med} ${coref_ner} ${med_joint} ${spanbert_base} {
}

train_medjoint_med_spanbert_large = ${data_med} ${coref_large_ner} ${med_joint} ${spanbert_large} {
}

train_medjoint_med_spanbert_large_med = ${data_med_adhd} ${coref_large_ner} ${med_joint} ${spanbert_large_med} {
}

train_medjoint_med_bert_base = ${data_med} ${coref} ${med_joint} ${bert_base} {
}

train_medjoint_med_bert_large = ${data_med} ${coref_large_ner} ${med_joint} ${bert_large} {
}

train_medjoint_med_bert_large_med = ${data_med} ${coref_large_ner} ${med_joint} ${bert_large_med} {
}

train_medjoint_med_roberta_base = ${data_med} ${coref_large_ner} ${med_joint} ${roberta_base} {
}

train_medjoint_med_roberta_large = ${data_med} ${coref_large_ner} ${med_joint} ${roberta_large} {
}

train_medjoint_med_roberta_large_med = ${data_med} ${coref_large_ner} ${med_joint} ${roberta_large_med} {
}
